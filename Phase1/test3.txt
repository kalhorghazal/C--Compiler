struct S1 begin
    int var1 , var2 = 3;
    int id (int _id) begin
        set begin
            id = _id;
        end
        get
            return id
    end
end

fptr <int -> int> f1(int arg1, bool arg1, list# list# struct S1 arg2) begin
    fptr <void -> void> ptr1 = f1; return ptr1;
end

int sample()
    if a | b * c + d / g
        if ~(a & b)
            return append(li, 8 * 9 / func())[1][0];

        else
            return -size(li) + a - n;

main() begin
    f1()();
    do
        i = i + 1 - 3;
    while i < n & i > k
end