struct S begin
    int attr1 = 5 + 3; fptr<void -> int> pointer;
    list # bool myList


        fptr<list#list#int, int -> void> p

    int property(int _property) begin
        set begin
        property = _property;
        display(_property);
        end


            get begin
     return size(append(myList, property*2 -3));

            end
    end

end

    struct S1
     struct S x = 15 | (3-12*9/2) & -5;
    struct S2 begin
        bool is_true_9_
    end

  int f(int x)
    return /**narni**/ x*x + 5

    void g() begin
    struct S s;
   if s + 1 == 5

    return
    else begin
        return g() * f();
    end
    end

  main   (   )     begin
  int intx,y=1-3*8,z=6; int t;
  g();
  f(x+5*g())

    while(y + intx > t*z) begin
            do begin
                /*this is do while*/
                return 3
             end while f(intx) *(intx+6); display(f(t)());
        end
	display(size(myList))
    return y;
  end