struct new begin
    list #list #struct old olds
    fptr<struct empty -> void> newfp
end

struct old begin
    fptr<struct new -> struct old> oldfp
    struct empty e1
    int oldvar (bool co, int gg) begin
        set begin
            int i, r
            int j, k
            struct empty e2 = e1 + true
        end
        get begin
            while co begin
                return append(empty, newlist * 2 & true > gg / true)
            end
            return gg
        end
    end
end

struct old oldf(fptr <struct empty -> struct old> fp, int arg) begin
    struct new n = fp(arg > mi == ~2  + 3)
    struct new n2
    fp = oldf
    oldf = fp
    return append(n2.olds[0], n2.olds[0][arg])
    return n2.newfp()
    n2.old.e1 = n2.olds[arg > arg] + n2.newfp
    return n2.olds[arg][arg].oldvar = arg
    return o.olfp = oldf
end


main() begin
    struct old o
    return o.olfp = oldf
    return o.oldfp = oldfp(oldfp)
end

